/*
* Argus Open Source
* Software to apply Statistical Disclosure Control techniques
* 
* Copyright 2014 Statistics Netherlands
* 
* This program is free software; you can redistribute it and/or 
* modify it under the terms of the European Union Public Licence 
* (EUPL) version 1.1, as published by the European Commission.
* 
* You can find the text of the EUPL v1.1 on
* https://joinup.ec.europa.eu/software/page/eupl/licence-eupl
* 
* This software is distributed on an "AS IS" basis without 
* warranties or conditions of any kind, either express or implied.
*/

package tauargus.gui;
import javax.swing.JTextField;
import tauargus.model.Application;
import tauargus.model.TableSet;

public class DialogModularParameters extends DialogBase {


    // ***** Dialog Return Values *****
    public static final int CANCEL_OPTION = 1;
    public static final int APPROVE_OPTION = 0;
    
    private int returnValue = CANCEL_OPTION;
    private static TableSet tableSet;
    private boolean forOptimal;

    // Creates new form DialogModularParameters
    public DialogModularParameters(java.awt.Frame parent, TableSet tableSet, boolean forOptimal, boolean modal) {
        super(parent, modal);
        DialogModularParameters.tableSet = tableSet;
        initComponents();
        this.forOptimal = forOptimal;
        jLabelmaxTimeOptimal.setVisible(forOptimal);
        jTextmaxTimeOptimal.setHorizontalAlignment(JTextField.RIGHT);
        jTextmaxTimeOptimal.setVisible(forOptimal);
        jLabelMaxminutes.setVisible(forOptimal);
        jLabelLowerMarg.setVisible(Application.isAnco() && !forOptimal);
        jLabelUpperMarg.setVisible(Application.isAnco() && !forOptimal);
        jTextFieldUpperMarg.setVisible(Application.isAnco() && !forOptimal);
        jTextFieldLowerMarg.setVisible(Application.isAnco() && !forOptimal);
        pack();
    }

    public int showDialog() {
        if (forOptimal) {
            setTitle("Optimal options");
            labelModularParameters.setText("Options for the optimal suppression:");
        }
        setLocationRelativeTo(this.getParent());
        setVisible(true);
        return returnValue;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelModularParameters = new javax.swing.JLabel();
        checkBoxSingleton = new javax.swing.JCheckBox();
        checkBoxSingletonMultiple = new javax.swing.JCheckBox();
        checkBoxMinFreq = new javax.swing.JCheckBox();
        jLabelmaxTimeOptimal = new javax.swing.JLabel();
        jTextmaxTimeOptimal = new javax.swing.JTextField();
        jLabelMaxminutes = new javax.swing.JLabel();
        jLabelLowerMarg = new javax.swing.JLabel();
        jTextFieldLowerMarg = new javax.swing.JTextField();
        jLabelUpperMarg = new javax.swing.JLabel();
        jTextFieldUpperMarg = new javax.swing.JTextField();
        buttonCancel = new javax.swing.JButton();
        buttonOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Modular options");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                DialogClosing(evt);
            }
        });

        labelModularParameters.setText("Options for the modular suppression:");

        checkBoxSingleton.setSelected(true);
        checkBoxSingleton.setText("Do Singletons");

        checkBoxSingletonMultiple.setSelected(true);
        checkBoxSingletonMultiple.setText("Do Singleton Multiple");

        checkBoxMinFreq.setSelected(true);
        checkBoxMinFreq.setText("Do Min Frequency");

        jLabelmaxTimeOptimal.setText("Max computing time");

        jTextmaxTimeOptimal.setText("10");

        jLabelMaxminutes.setText("minutes");

        jLabelLowerMarg.setText("LOWERMARG");

        jTextFieldLowerMarg.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldLowerMarg.setText("0.99");
        jTextFieldLowerMarg.setToolTipText("");

        jLabelUpperMarg.setText("UPPERMARG");

        jTextFieldUpperMarg.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldUpperMarg.setText("1.01");
        jTextFieldUpperMarg.setMaximumSize(null);
        jTextFieldUpperMarg.setMinimumSize(null);

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        buttonOk.setText("OK");
        buttonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelUpperMarg)
                                .addGap(10, 10, 10))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabelLowerMarg)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldUpperMarg, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldLowerMarg, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkBoxMinFreq)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelmaxTimeOptimal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextmaxTimeOptimal, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelMaxminutes))
                            .addComponent(checkBoxSingleton)
                            .addComponent(labelModularParameters)
                            .addComponent(checkBoxSingletonMultiple))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(buttonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCancel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelModularParameters)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkBoxSingleton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxSingletonMultiple)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxMinFreq)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelLowerMarg)
                    .addComponent(jTextFieldLowerMarg, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUpperMarg)
                    .addComponent(jTextFieldUpperMarg, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelmaxTimeOptimal)
                    .addComponent(jTextmaxTimeOptimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMaxminutes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOk)
                    .addComponent(buttonCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOkActionPerformed
        tableSet.singletonSingletonCheck = checkBoxSingleton.isSelected();
        tableSet.singletonMultipleCheck = checkBoxSingletonMultiple.isSelected();
        tableSet.minFreqCheck = checkBoxMinFreq.isSelected();
        tableSet.maxTimeOptimal = Integer.parseInt(jTextmaxTimeOptimal.getText());
        tableSet.SetLowerMarg(Double.parseDouble(jTextFieldLowerMarg.getText()));
        tableSet.SetUpperMarg(Double.parseDouble(jTextFieldUpperMarg.getText()));
        returnValue = APPROVE_OPTION;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_buttonOkActionPerformed

    private void DialogClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_DialogClosing
        setVisible(false);
        dispose();
    }//GEN-LAST:event_DialogClosing

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(DialogModularParameters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(DialogModularParameters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(DialogModularParameters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(DialogModularParameters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                DialogModularParameters dialog = new DialogModularParameters(new javax.swing.JFrame(), tableSet, false, true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonOk;
    private javax.swing.JCheckBox checkBoxMinFreq;
    private javax.swing.JCheckBox checkBoxSingleton;
    private javax.swing.JCheckBox checkBoxSingletonMultiple;
    private javax.swing.JLabel jLabelLowerMarg;
    private javax.swing.JLabel jLabelMaxminutes;
    private javax.swing.JLabel jLabelUpperMarg;
    private javax.swing.JLabel jLabelmaxTimeOptimal;
    private javax.swing.JTextField jTextFieldLowerMarg;
    private javax.swing.JTextField jTextFieldUpperMarg;
    private javax.swing.JTextField jTextmaxTimeOptimal;
    private javax.swing.JLabel labelModularParameters;
    // End of variables declaration//GEN-END:variables
}
